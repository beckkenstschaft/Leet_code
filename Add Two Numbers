/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode *newhead = new ListNode(0);
        ListNode *temp = newhead;
        int carry=0;
        
        while(l1!=NULL || l2!=NULL){
            int v1 = l1?l1->val:0;
            int v2 = l2?l2->val:0;
            
            int result = (v1 + v2 + carry); 
            
            temp->next = new ListNode(result%10);
            carry = result / 10;
            
            temp = temp->next;

            if(l1!=NULL){
                l1 = l1->next;
            }

            if(l2!=NULL){
                l2 = l2->next;
            }
        }

        if(carry){
            temp->next = new ListNode(carry);
        }

        return newhead->next;
    }
};
